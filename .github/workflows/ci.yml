name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-and-lint:
    name: "PHP Lint, Test & SonarQube"
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      # Шаг 1: Загрузка кода
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Полная история коммитов для SonarQube

      # Шаг 2: Настройка PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: pcov  # Быстрее чем Xdebug
          tools: composer:v2
          ini-values: memory_limit=-1, pcov.enabled=1

      # Шаг 3: Установка зависимостей
      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress --optimize-autoloader
          composer dump-autoload --optimize

      # Шаг 4: Запуск линтера
      - name: Run Linter
        run: make lint

      # Шаг 5: Запуск тестов с генерацией coverage
      - name: Run Tests with coverage
        run: |
          vendor/bin/phpunit --coverage-clover=coverage.xml
          # Проверяем что coverage файл создан
          if [ ! -f "coverage.xml" ]; then
            echo "::error::Coverage file not generated!"
            exit 1
          fi

      # Шаг 6: Установка Java 17 (требуется для SonarQube)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Шаг 7: Запуск SonarQube анализа
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v1
        with:
          args: >
            -Dsonar.projectKey=liar74ru_php-project-48
            -Dsonar.projectName=php-project-48
            -Dsonar.php.coverage.reportPaths=coverage.xml
            -Dsonar.sources=src
            -Dsonar.tests=tests
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.qualitygate.wait=true
            -Dsonar.verbose=true
            -Dsonar.language=php
            -Dsonar.exclusions=**/vendor/**,**/cache/**,**/logs/**
            -Dsonar.cpd.exclusions=**/vendor/**
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}